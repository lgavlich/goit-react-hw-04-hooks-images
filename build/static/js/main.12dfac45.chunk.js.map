{"version":3,"sources":["API/api.js","components/Button/Button.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","App.js","index.js"],"names":["api","fetchSearch","search","page","fetch","then","response","ok","json","Promise","reject","Error","Button","onClick","className","type","Modal","onClose","modalImage","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","src","alt","SearchBar","state","imageName","handleImageName","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","resetForm","this","placeholder","onChange","Component","GalleryItem","id","webformatURL","largeImageURL","ImageGalleryItem","ImageGallery","images","onImgClick","map","Spinner","color","height","width","App","useState","setImageName","setImages","setPage","loader","setLoader","showModal","setShowModal","setModalImage","setError","res","hits","prevState","length","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","toggleModal","Loader","message","position","autoClose","newestOnTop","closeOnClick","rtl","query","target","nodeName","dataset","img","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12dfac45.chunk.js","sourcesContent":["function fetchSearch(search, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${search}&page=${page}&key=23006232-27664577dbbc234e8c464ad7c&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Request ${search} not found`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchSearch,\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div className=\"Button-Click\">\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Modal({ onClose, modalImage: { modalImage } }) {\r\n  useEffect(() => {\r\n    //const handleKeyDown = (e) => {\r\n    //if (e.code === \"Escape\") {\r\n    //onClose();\r\n    //}\r\n    //};\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  //const handleBackdropClick = (e) => {\r\n  //if (e.currentTarget === e.target) {\r\n  //onClose();\r\n  //}\r\n  //};\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClose}>\r\n      <div className=\"Modal\">\r\n        <img src={modalImage} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  modalImage: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    imageName: \"\",\r\n  };\r\n\r\n  handleImageName = (e) => {\r\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.imageName.trim() === \"\") {\r\n      return toast.error(\"Введіть правильний запит\");\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    // this.setState({ imageName: \"\" });\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      imageName: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"button\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\"></span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            //autocomplete=\"off\"\r\n            //autofocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageName}\r\n            onChange={this.handleImageName}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GalleryItem = ({ id, webformatURL, largeImageURL }) => {\r\n  return (\r\n    <li ImageGalleryItem key={id}>\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"img\"\r\n        className=\"ImageGalleryItem-image\"\r\n        data-img={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onImgClick }) => (\r\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        largeImageURL={largeImageURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useEffect, useState } from \"react\";\nimport api from \"./API/api\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.js\";\nimport Loader from \"./components/Loader/Loader\";\n\nexport default function App() {\n  const [imageName, setImageName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (imageName === \"\") {\n      return;\n    }\n    fetchSearch();\n  }, [imageName]);\n\n  const fetchSearch = () => {\n    setLoader(true);\n    api\n      .fetchSearch(imageName, page)\n      .then((res) => {\n        const { hits } = res;\n\n        setImages((prevState) => [...prevState, ...hits]);\n        setPage((prevState) => prevState + 1);\n\n        if (images.length > 12) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => setError(error))\n      .finally(() => setLoader(false));\n  };\n  const formSubmit = (query) => {\n    if (query !== imageName) {\n      setImageName(query);\n      setPage(1);\n      setImages([]);\n      setError(null);\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal((showModal) => !showModal);\n  };\n\n  const onImgClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    setModalImage({\n      modalImage: e.target.dataset.img,\n    });\n    toggleModal();\n  };\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {error && <p>{error.message}</p>}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n      />\n      <Searchbar onSubmit={formSubmit} />\n      <ImageGallery images={images} onImgClick={onImgClick} />\n\n      {images.length > 0 && !loader && <Button onClick={fetchSearch} />}\n      {showModal && <Modal modalImage={modalImage} onClose={toggleModal} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}